import numpy as np
import cPickle as pickle

def results_crossvalidation_full_gt():

    pedunculus = {
            "b"     : (0.922150950129, 0.00198370559172, 0.902936457007, 0.00246789245543),
            "e"     : (0.940876982107, 0.00150690650569, 0.928820363858, 0.00092831658037),
            "be"    : (0.940876982107, 0.00150690650569, 0.928820363858, 0.00092831658037),
            "brt"   : (0.938608443513, 0.0012526032989, 0.92937926385, 0.00166381714675),
            "ert"   : (0.953440832899, 0.00180996185382, 0.944836372021, 0.00138428913709),
            "bert"  : (0.953342229674, 0.00199825840016, 0.945850873725, 0.00122604405033),
            "brt2"  : (0.939486745151, 0.00169627674082, 0.929637594038, 0.00194736083724),
            "ert2"  : (0.954164170571, 0.00200279322838, 0.94510407754, 0.00138672215958),
            "bert2" : (0.954281578504, 0.00115750047046, 0.945329530427, 0.00162496995476) }

    sopnetcompare = {
            "b"     : (0.90146039046,  0.00275460687187, 0, 0),
            "e"     : (0.908670621794, 0.00328588500297, 0, 0),
            "be"    : (0.915496285878, 0.00208362755355, 0, 0),
            "brt"   : (0.931752020224, 0.00283981628193, 0, 0),
            "ert"   : (0.937135683714, 0.00213990057388, 0, 0),
            "bert"  : (0.937904737255, 0.00251687935381, 0, 0),
            "brt2"  : (0.932311384381, 0.0010330138585,  0, 0),
            "ert2"  : (0.937965918426, 0.00237969145583, 0, 0),
            "bert2" : (0.938158233747, 0.00222160002398, 0, 0) }

    isbi2013 = {
            "b"     : ( 0.871971674004, 0.00125631320758, 0.865069616834, 0.00163881589427),
            "e"     : ( 0.920963107454, 0.000417233473192, 0.925326399801, 0.000853959495468),
            "be"    : ( 0.925008206201, 0.000869804365691, 0.928902675418, 0.00088883460017),
            "brt"   : ( 0.931478677742, 0.00114053652777,  0.927269401885, 0.000780121640763),
            "ert"   : ( 0.94979673132,  0.00105160242154, 0.950820695537, 0.00070724377042),
            "bert"  : ( 0.949419298306,  0.00110190328695, 0.950169081574, 0.00105663224153),
            "brt2"  : ( 0.932101524466, 0.000727974169591, 0.927369257079, 0.000945645760165),
            "ert2"  : ( 0.950290941518, 0.000611183606379, 0.951008563371, 0.000826716961311),
            "bert2"  : ( 0.949788264924, 0.000936689892503, 0.95044665504,  0.000992062657684) }


    ds_dict = { "pedunculus" : pedunculus,
                "sopnetcompare" : sopnetcompare,
                "isbi2013" : isbi2013 }

    return ds_dict

def read_res_dict(path_2d, path_3d = None):

    with open(path_2d, 'r') as file_2d:
        res_2d = pickle.load(file_2d)

    if path_3d is not None:
        with open(path_3d, 'r') as file_3d:
            res_3d = pickle.load(file_3d)

        assert res_2d.keys() == res_3d.keys()

    ret_dict = {}
    for key in res_2d.keys():
        ret_dict[key + "_2d"] = [ np.array(res_2d[key][0]),
                                  np.array(res_2d[key][1]),
                                  np.array(res_2d[key][2]),
                                  np.array(res_2d[key][3]),
                                  np.array(res_2d[key][4]),
                                  np.array(res_2d[key][5]) ]
        if path_3d is None:
            ret_dict[key + "_3d"] = False
        else:
            ret_dict[key + "_3d"] = [ np.array(res_3d[key][0]),
                                      np.array(res_3d[key][1]),
                                      np.array(res_3d[key][2]),
                                      np.array(res_3d[key][3]),
                                      np.array(res_3d[key][4]),
                                      np.array(res_3d[key][5]) ]

    return ret_dict
